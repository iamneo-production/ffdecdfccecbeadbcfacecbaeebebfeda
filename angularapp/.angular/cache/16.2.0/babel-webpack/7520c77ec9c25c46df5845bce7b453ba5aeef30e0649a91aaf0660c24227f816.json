{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass FilterPipe {\n  transform(value, filter) {\n    if (filter == \"\") {\n      return value;\n    }\n    const foods = [];\n    for (let v of value) {\n      if (v.name.includes(filter)) {\n        foods.push(v);\n      }\n    }\n    return foods;\n  }\n}\n_class = FilterPipe;\n_class.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: _class,\n  pure: true\n});\nexport { FilterPipe };","map":{"version":3,"names":["FilterPipe","transform","value","filter","foods","v","name","includes","push","pure"],"sources":["/home/coder/project/workspace/angularapp/src/app/filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\nname: \"filter\"\n})\nexport class FilterPipe implements PipeTransform {\n\ntransform(value: any,filter:string){\nif (filter == \"\"){\nreturn value;\n}\nconst foods = [];\nfor(let v of value)\n{\nif(v.name.includes(filter))\n{\nfoods.push(v);\n}\n}\n\nreturn foods;\n}\n\n} "],"mappings":";;AAEA,MAGaA,UAAU;EAEvBC,SAASA,CAACC,KAAU,EAACC,MAAa;IAClC,IAAIA,MAAM,IAAI,EAAE,EAAC;MACjB,OAAOD,KAAK;;IAEZ,MAAME,KAAK,GAAG,EAAE;IAChB,KAAI,IAAIC,CAAC,IAAIH,KAAK,EAClB;MACA,IAAGG,CAAC,CAACC,IAAI,CAACC,QAAQ,CAACJ,MAAM,CAAC,EAC1B;QACAC,KAAK,CAACI,IAAI,CAACH,CAAC,CAAC;;;IAIb,OAAOD,KAAK;EACZ;;SAhBaJ,UAAU;;mBAAVA,MAAU;AAAA;;;QAAVA,MAAU;EAAAS,IAAA;AAAA;SAAVT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}